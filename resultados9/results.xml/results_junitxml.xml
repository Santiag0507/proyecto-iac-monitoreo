<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="9" tests="133" time="0.0">
	<testsuite disabled="0" errors="0" failures="9" name="terraform scan" skipped="1" tests="133" time="0">
		<properties>
			<property name="directory" value="['/app']"/>
			<property name="add_check" value="False"/>
			<property name="list" value="False"/>
			<property name="output" value="['junitxml']"/>
			<property name="output_file_path" value="resultados/results.xml"/>
			<property name="output_bc_ids" value="False"/>
			<property name="include_all_checkov_policies" value="True"/>
			<property name="quiet" value="False"/>
			<property name="compact" value="False"/>
			<property name="framework" value="['all']"/>
			<property name="skip_framework" value="[]"/>
			<property name="run_all_external_checks" value="False"/>
			<property name="soft_fail" value="False"/>
			<property name="skip_results_upload" value="False"/>
			<property name="repo_id" value="cli_repo/app"/>
			<property name="branch" value="master"/>
			<property name="skip_download" value="False"/>
			<property name="use_enforcement_rules" value="False"/>
			<property name="external_modules_download_path" value=".external_modules"/>
			<property name="evaluate_variables" value="True"/>
			<property name="no_cert_verify" value="False"/>
			<property name="create_baseline" value="False"/>
			<property name="output_baseline_as_skipped" value="False"/>
			<property name="secrets_scan_file_type" value="[]"/>
			<property name="enable_secret_scan_all_files" value="False"/>
			<property name="block_list_secret_scan" value="[]"/>
			<property name="summary_position" value="top"/>
			<property name="skip_resources_without_violations" value="False"/>
			<property name="deep_analysis" value="False"/>
			<property name="no_fail_on_crash" value="False"/>
			<property name="mask" value="defaultdict(&lt;class 'set'&gt;, {})"/>
			<property name="scan_secrets_history" value="False"/>
			<property name="secrets_history_timeout" value="12h"/>
			<property name="custom_tool_name" value="Checkov"/>
		</properties>
		<testcase name="[NONE][CKV_AWS_41] Ensure no hard coded AWS access key and secret key exists in provider" classname="/main.tf.aws.default" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/main.tf.aws_iam_role.lambda_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_60] Ensure IAM role allows only specific services or principals to assume it" classname="/main.tf.aws_iam_role.lambda_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_61] Ensure AWS IAM policy does not allow assume role permission across all services" classname="/main.tf.aws_iam_role.lambda_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_274] Disallow IAM roles, users, and groups from using the AWS AdministratorAccess policy" classname="/main.tf.aws_iam_role_policy_attachment.lambda_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_290] Ensure IAM policies does not allow write access without constraints" classname="/main.tf.aws_iam_role_policy.lambda_dynamodb" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_289] Ensure IAM policies does not allow permissions management / resource exposure without constraints" classname="/main.tf.aws_iam_role_policy.lambda_dynamodb" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_62] Ensure IAM policies that allow full &quot;*-*&quot; administrative privileges are not created" classname="/main.tf.aws_iam_role_policy.lambda_dynamodb" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_355] Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions" classname="/main.tf.aws_iam_role_policy.lambda_dynamodb" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_286] Ensure IAM policies does not allow privilege escalation" classname="/main.tf.aws_iam_role_policy.lambda_dynamodb" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_288] Ensure IAM policies does not allow data exfiltration" classname="/main.tf.aws_iam_role_policy.lambda_dynamodb" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_287] Ensure IAM policies does not allow credentials exposure" classname="/main.tf.aws_iam_role_policy.lambda_dynamodb" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_63] Ensure no IAM policies documents allow &quot;*&quot; as a statement's actions" classname="/main.tf.aws_iam_role_policy.lambda_dynamodb" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_227] Ensure KMS key is enabled" classname="/main.tf.aws_kms_key.dynamodb_key" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_7] Ensure rotation for customer created CMKs is enabled" classname="/main.tf.aws_kms_key.dynamodb_key" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_119] Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK" classname="/main.tf.aws_dynamodb_table.iot_data" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_28] Ensure DynamoDB point in time recovery (backup) is enabled" classname="/main.tf.aws_dynamodb_table.iot_data" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_227] Ensure KMS key is enabled" classname="/main.tf.aws_kms_key.lambda_env_key" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_7] Ensure rotation for customer created CMKs is enabled" classname="/main.tf.aws_kms_key.lambda_env_key" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_23] Ensure every security group and rule has a description" classname="/main.tf.aws_security_group.lambda_sg" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_25] Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389" classname="/main.tf.aws_security_group.lambda_sg" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_260] Ensure no security groups allow ingress from 0.0.0.0:0 to port 80" classname="/main.tf.aws_security_group.lambda_sg" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_277] Ensure no security groups allow ingress from 0.0.0.0:0 to port -1" classname="/main.tf.aws_security_group.lambda_sg" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_24] Ensure no security groups allow ingress from 0.0.0.0:0 to port 22" classname="/main.tf.aws_security_group.lambda_sg" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_158] Ensure that CloudWatch Log Group is encrypted by KMS" classname="/main.tf.aws_cloudwatch_log_group.apigw_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_66] Ensure that CloudWatch Log Group specifies retention days" classname="/main.tf.aws_cloudwatch_log_group.apigw_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_50] X-Ray tracing is enabled for Lambda" classname="/main.tf.aws_lambda_function.lambdas[&quot;alert_system&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_116] Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)" classname="/main.tf.aws_lambda_function.lambdas[&quot;alert_system&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_173] Check encryption settings for Lambda environmental variable" classname="/main.tf.aws_lambda_function.lambdas[&quot;alert_system&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_363] Ensure Lambda Runtime is not deprecated" classname="/main.tf.aws_lambda_function.lambdas[&quot;alert_system&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_45] Ensure no hard-coded secrets exist in lambda environment" classname="/main.tf.aws_lambda_function.lambdas[&quot;alert_system&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_272] Ensure AWS Lambda function is configured to validate code-signing" classname="/main.tf.aws_lambda_function.lambdas[&quot;alert_system&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_117] Ensure that AWS Lambda function is configured inside a VPC" classname="/main.tf.aws_lambda_function.lambdas[&quot;alert_system&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_115] Ensure that AWS Lambda function is configured for function-level concurrent execution limit" classname="/main.tf.aws_lambda_function.lambdas[&quot;alert_system&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_309] Ensure API GatewayV2 routes specify an authorization type" classname="/main.tf.aws_apigatewayv2_route.send_to_sqs_route" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_364] Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount" classname="/main.tf.aws_lambda_permission.allow_apigw_send_to_sqs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_301] Ensure that AWS Lambda function is not publicly accessible" classname="/main.tf.aws_lambda_permission.allow_apigw_send_to_sqs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_309] Ensure API GatewayV2 routes specify an authorization type" classname="/main.tf.aws_apigatewayv2_route.lambda_routes" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_76] Ensure API Gateway has Access Logging enabled" classname="/main.tf.aws_apigatewayv2_stage.default_stage" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_364] Ensure that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount" classname="/main.tf.aws_lambda_permission.allow_apigw" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_301] Ensure that AWS Lambda function is not publicly accessible" classname="/main.tf.aws_lambda_permission.allow_apigw" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_158] Ensure that CloudWatch Log Group is encrypted by KMS" classname="/main.tf.aws_cloudwatch_log_group.lambda_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_66] Ensure that CloudWatch Log Group specifies retention days" classname="/main.tf.aws_cloudwatch_log_group.lambda_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_338] Ensure CloudWatch log groups retains logs for at least 1 year" classname="/main.tf.aws_cloudwatch_log_group.lambda_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_158] Ensure that CloudWatch Log Group is encrypted by KMS" classname="/main.tf.aws_cloudwatch_log_group.lambda_send_to_sqs_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_66] Ensure that CloudWatch Log Group specifies retention days" classname="/main.tf.aws_cloudwatch_log_group.lambda_send_to_sqs_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_338] Ensure CloudWatch log groups retains logs for at least 1 year" classname="/main.tf.aws_cloudwatch_log_group.lambda_send_to_sqs_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_27] Ensure all data stored in the SQS queue is encrypted" classname="/main.tf.aws_sqs_queue.lambda_dlq" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_168] Ensure SQS queue policy is not public by only allowing specific services or principals to access it" classname="/main.tf.aws_sqs_queue.lambda_dlq" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_27] Ensure all data stored in the SQS queue is encrypted" classname="/main.tf.aws_sqs_queue.iot_alert_queue" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_168] Ensure SQS queue policy is not public by only allowing specific services or principals to access it" classname="/main.tf.aws_sqs_queue.iot_alert_queue" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_50] X-Ray tracing is enabled for Lambda" classname="/main.tf.aws_lambda_function.send_to_sqs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_116] Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)" classname="/main.tf.aws_lambda_function.send_to_sqs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_363] Ensure Lambda Runtime is not deprecated" classname="/main.tf.aws_lambda_function.send_to_sqs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_45] Ensure no hard-coded secrets exist in lambda environment" classname="/main.tf.aws_lambda_function.send_to_sqs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_117] Ensure that AWS Lambda function is configured inside a VPC" classname="/main.tf.aws_lambda_function.send_to_sqs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_115] Ensure that AWS Lambda function is configured for function-level concurrent execution limit" classname="/main.tf.aws_lambda_function.send_to_sqs" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_26] Ensure all data stored in the SNS topic is encrypted" classname="/main.tf.aws_sns_topic.iot_alert_topic" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_173] Check encryption settings for Lambda environmental variable" classname="/main.tf.aws_lambda_function.sqs_to_sns" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_363] Ensure Lambda Runtime is not deprecated" classname="/main.tf.aws_lambda_function.sqs_to_sns" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_45] Ensure no hard-coded secrets exist in lambda environment" classname="/main.tf.aws_lambda_function.sqs_to_sns" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_117] Ensure that AWS Lambda function is configured inside a VPC" classname="/main.tf.aws_lambda_function.sqs_to_sns" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_50] X-Ray tracing is enabled for Lambda" classname="/main.tf.aws_lambda_function.lambdas[&quot;generate_report&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_116] Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)" classname="/main.tf.aws_lambda_function.lambdas[&quot;generate_report&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_173] Check encryption settings for Lambda environmental variable" classname="/main.tf.aws_lambda_function.lambdas[&quot;generate_report&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_363] Ensure Lambda Runtime is not deprecated" classname="/main.tf.aws_lambda_function.lambdas[&quot;generate_report&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_45] Ensure no hard-coded secrets exist in lambda environment" classname="/main.tf.aws_lambda_function.lambdas[&quot;generate_report&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_272] Ensure AWS Lambda function is configured to validate code-signing" classname="/main.tf.aws_lambda_function.lambdas[&quot;generate_report&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_117] Ensure that AWS Lambda function is configured inside a VPC" classname="/main.tf.aws_lambda_function.lambdas[&quot;generate_report&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_115] Ensure that AWS Lambda function is configured for function-level concurrent execution limit" classname="/main.tf.aws_lambda_function.lambdas[&quot;generate_report&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_50] X-Ray tracing is enabled for Lambda" classname="/main.tf.aws_lambda_function.lambdas[&quot;get_dashboard&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_116] Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)" classname="/main.tf.aws_lambda_function.lambdas[&quot;get_dashboard&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_173] Check encryption settings for Lambda environmental variable" classname="/main.tf.aws_lambda_function.lambdas[&quot;get_dashboard&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_363] Ensure Lambda Runtime is not deprecated" classname="/main.tf.aws_lambda_function.lambdas[&quot;get_dashboard&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_45] Ensure no hard-coded secrets exist in lambda environment" classname="/main.tf.aws_lambda_function.lambdas[&quot;get_dashboard&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_272] Ensure AWS Lambda function is configured to validate code-signing" classname="/main.tf.aws_lambda_function.lambdas[&quot;get_dashboard&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_117] Ensure that AWS Lambda function is configured inside a VPC" classname="/main.tf.aws_lambda_function.lambdas[&quot;get_dashboard&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_115] Ensure that AWS Lambda function is configured for function-level concurrent execution limit" classname="/main.tf.aws_lambda_function.lambdas[&quot;get_dashboard&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_50] X-Ray tracing is enabled for Lambda" classname="/main.tf.aws_lambda_function.lambdas[&quot;register_device&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_116] Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)" classname="/main.tf.aws_lambda_function.lambdas[&quot;register_device&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_173] Check encryption settings for Lambda environmental variable" classname="/main.tf.aws_lambda_function.lambdas[&quot;register_device&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_363] Ensure Lambda Runtime is not deprecated" classname="/main.tf.aws_lambda_function.lambdas[&quot;register_device&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_45] Ensure no hard-coded secrets exist in lambda environment" classname="/main.tf.aws_lambda_function.lambdas[&quot;register_device&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_272] Ensure AWS Lambda function is configured to validate code-signing" classname="/main.tf.aws_lambda_function.lambdas[&quot;register_device&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_117] Ensure that AWS Lambda function is configured inside a VPC" classname="/main.tf.aws_lambda_function.lambdas[&quot;register_device&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_115] Ensure that AWS Lambda function is configured for function-level concurrent execution limit" classname="/main.tf.aws_lambda_function.lambdas[&quot;register_device&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_50] X-Ray tracing is enabled for Lambda" classname="/main.tf.aws_lambda_function.lambdas[&quot;store_metrics&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_116] Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)" classname="/main.tf.aws_lambda_function.lambdas[&quot;store_metrics&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_173] Check encryption settings for Lambda environmental variable" classname="/main.tf.aws_lambda_function.lambdas[&quot;store_metrics&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_363] Ensure Lambda Runtime is not deprecated" classname="/main.tf.aws_lambda_function.lambdas[&quot;store_metrics&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_45] Ensure no hard-coded secrets exist in lambda environment" classname="/main.tf.aws_lambda_function.lambdas[&quot;store_metrics&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_272] Ensure AWS Lambda function is configured to validate code-signing" classname="/main.tf.aws_lambda_function.lambdas[&quot;store_metrics&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_117] Ensure that AWS Lambda function is configured inside a VPC" classname="/main.tf.aws_lambda_function.lambdas[&quot;store_metrics&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_115] Ensure that AWS Lambda function is configured for function-level concurrent execution limit" classname="/main.tf.aws_lambda_function.lambdas[&quot;store_metrics&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_111] Ensure IAM policies does not allow write access without constraints" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_109] Ensure IAM policies does not allow permissions management / resource exposure without constraints" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_1] Ensure IAM policies that allow full &quot;*-*&quot; administrative privileges are not created" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_110] Ensure IAM policies does not allow privilege escalation" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_356] Ensure no IAM policies documents allow &quot;*&quot; as a statement's resource for restrictable actions" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_49] Ensure no IAM policies documents allow &quot;*&quot; as a statement's actions" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_108] Ensure IAM policies does not allow data exfiltration" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_283] Ensure no IAM policies documents allow ALL or any AWS principal permissions to the resource" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_358] Ensure AWS GitHub Actions OIDC authorization policies only allow safe claims and claim order" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_107] Ensure IAM policies does not allow credentials exposure" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_73] Ensure AWS SQS uses CMK not AWS default keys for encryption" classname="/main.tf.aws_sqs_queue.lambda_dlq" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_73] Ensure AWS SQS uses CMK not AWS default keys for encryption" classname="/main.tf.aws_sqs_queue.iot_alert_queue" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_64] Ensure KMS key Policy is defined" classname="/main.tf.aws_kms_key.dynamodb_key" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_64] Ensure KMS key Policy is defined" classname="/main.tf.aws_kms_key.lambda_env_key" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_77] Ensure AWS API Gateway Rest API attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability" classname="/main.tf.aws_apigatewayv2_api.http_api" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_51] Ensure AWS API Gateway endpoints uses client certificate authentication" classname="/main.tf.aws_apigatewayv2_stage.default_stage" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_40] Ensure AWS IAM policy does not allow full IAM privileges" classname="/main.tf.aws_iam_policy_document.lambda_assume_role" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_40] Ensure AWS IAM policy does not allow full IAM privileges" classname="/main.tf.aws_iam_role_policy.lambda_dynamodb" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_5] Ensure that Security Groups are attached to another resource" classname="/main.tf.aws_security_group.lambda_sg" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_75] Ensure no open CORS policy" classname="/main.tf.aws_lambda_function.lambdas[&quot;alert_system&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_75] Ensure no open CORS policy" classname="/main.tf.aws_lambda_function.send_to_sqs" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_75] Ensure no open CORS policy" classname="/main.tf.aws_lambda_function.sqs_to_sns" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_75] Ensure no open CORS policy" classname="/main.tf.aws_lambda_function.lambdas[&quot;generate_report&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_75] Ensure no open CORS policy" classname="/main.tf.aws_lambda_function.lambdas[&quot;get_dashboard&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_75] Ensure no open CORS policy" classname="/main.tf.aws_lambda_function.lambdas[&quot;register_device&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_75] Ensure no open CORS policy" classname="/main.tf.aws_lambda_function.lambdas[&quot;store_metrics&quot;]" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/main.tf.aws_iam_role.lambda_role" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_56] Ensure AWS Managed IAMFullAccess IAM policy is not used." classname="/main.tf.aws_iam_role_policy_attachment.lambda_logs" file="/main.tf"/>
		<testcase name="[NONE][CKV2_AWS_16] Ensure that Auto Scaling is enabled on your DynamoDB tables" classname="/main.tf.aws_dynamodb_table.iot_data" file="/main.tf"/>
		<testcase name="[NONE][CKV_AWS_33] Ensure KMS key policy does not contain wildcard (*) principal" classname="/main.tf.aws_kms_key.dynamodb_key" file="/main.tf">
			<failure type="failure" message="Ensure KMS key policy does not contain wildcard (*) principal">
Resource: aws_kms_key.dynamodb_key
File: /main.tf: 74-94
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-kms-key-policy-does-not-contain-wildcard-principal

		74 | resource &quot;aws_kms_key&quot; &quot;dynamodb_key&quot; {
		75 |   description             = &quot;CMK for DynamoDB encryption&quot;
		76 |   deletion_window_in_days = 10
		77 |   enable_key_rotation     = true
		78 | 
		79 |   policy = jsonencode({
		80 |     Version = &quot;2012-10-17&quot;
		81 |     Id      = &quot;default&quot;
		82 |     Statement = [
		83 |       {
		84 |         Sid       = &quot;Enable IAM User Permissions&quot;
		85 |         Effect    = &quot;Allow&quot;
		86 |         Principal = {
		87 |           AWS = &quot;*&quot;
		88 |         }
		89 |         Action    = &quot;kms:*&quot;
		90 |         Resource  = &quot;*&quot;
		91 |       }
		92 |     ]
		93 |   })
		94 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_33] Ensure KMS key policy does not contain wildcard (*) principal" classname="/main.tf.aws_kms_key.lambda_env_key" file="/main.tf">
			<failure type="failure" message="Ensure KMS key policy does not contain wildcard (*) principal">
Resource: aws_kms_key.lambda_env_key
File: /main.tf: 129-149
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-kms-key-policy-does-not-contain-wildcard-principal

		129 | resource &quot;aws_kms_key&quot; &quot;lambda_env_key&quot; {
		130 |   description             = &quot;KMS key for encrypting Lambda environment variables&quot;
		131 |   deletion_window_in_days = 10
		132 |   enable_key_rotation     = true
		133 | 
		134 |   policy = jsonencode({
		135 |     Version = &quot;2012-10-17&quot;
		136 |     Id      = &quot;default&quot;
		137 |     Statement = [
		138 |       {
		139 |         Sid       = &quot;Enable IAM User Permissions&quot;
		140 |         Effect    = &quot;Allow&quot;
		141 |         Principal = {
		142 |           AWS = &quot;*&quot;
		143 |         }
		144 |         Action    = &quot;kms:*&quot;
		145 |         Resource  = &quot;*&quot;
		146 |       }
		147 |     ]
		148 |   })
		149 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_338] Ensure CloudWatch log groups retains logs for at least 1 year" classname="/main.tf.aws_cloudwatch_log_group.apigw_logs" file="/main.tf">
			<failure type="failure" message="Ensure CloudWatch log groups retains logs for at least 1 year">
Resource: aws_cloudwatch_log_group.apigw_logs
File: /main.tf: 179-183
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-338

		179 | resource &quot;aws_cloudwatch_log_group&quot; &quot;apigw_logs&quot; {
		180 |   name              = &quot;/aws/apigateway/access-logs&quot;
		181 |   retention_in_days = 30
		182 |   kms_key_id        = aws_kms_key.lambda_env_key.arn
		183 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_173] Check encryption settings for Lambda environmental variable" classname="/main.tf.aws_lambda_function.send_to_sqs" file="/main.tf">
			<failure type="failure" message="Check encryption settings for Lambda environmental variable">
Resource: aws_lambda_function.send_to_sqs
File: /main.tf: 327-355
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5

		327 | resource &quot;aws_lambda_function&quot; &quot;send_to_sqs&quot; {
		328 |   function_name    = &quot;send_to_sqs&quot;
		329 |   handler          = &quot;index.handler&quot;
		330 |   runtime          = &quot;nodejs18.x&quot;
		331 |   filename         = &quot;${path.module}/lambda_send_to_sqs.zip&quot;
		332 |   source_code_hash = filebase64sha256(&quot;${path.module}/lambda_send_to_sqs.zip&quot;)
		333 |   role             = aws_iam_role.lambda_role.arn
		334 | 
		335 |   environment {
		336 |     variables = {
		337 |       SQS_URL = aws_sqs_queue.iot_alert_queue.id
		338 |     }
		339 |   }
		340 | 
		341 |   tracing_config {
		342 |     mode = &quot;Active&quot;
		343 |   }
		344 | 
		345 |   reserved_concurrent_executions = 10
		346 | 
		347 |   dead_letter_config {
		348 |     target_arn = aws_sqs_queue.lambda_dlq.arn
		349 |   }
		350 | 
		351 |   vpc_config {
		352 |     subnet_ids         = data.aws_subnet_ids.default.ids
		353 |     security_group_ids = [aws_security_group.lambda_sg.id]
		354 |   }
		355 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_272] Ensure AWS Lambda function is configured to validate code-signing" classname="/main.tf.aws_lambda_function.send_to_sqs" file="/main.tf">
			<failure type="failure" message="Ensure AWS Lambda function is configured to validate code-signing">
Resource: aws_lambda_function.send_to_sqs
File: /main.tf: 327-355
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-272

		327 | resource &quot;aws_lambda_function&quot; &quot;send_to_sqs&quot; {
		328 |   function_name    = &quot;send_to_sqs&quot;
		329 |   handler          = &quot;index.handler&quot;
		330 |   runtime          = &quot;nodejs18.x&quot;
		331 |   filename         = &quot;${path.module}/lambda_send_to_sqs.zip&quot;
		332 |   source_code_hash = filebase64sha256(&quot;${path.module}/lambda_send_to_sqs.zip&quot;)
		333 |   role             = aws_iam_role.lambda_role.arn
		334 | 
		335 |   environment {
		336 |     variables = {
		337 |       SQS_URL = aws_sqs_queue.iot_alert_queue.id
		338 |     }
		339 |   }
		340 | 
		341 |   tracing_config {
		342 |     mode = &quot;Active&quot;
		343 |   }
		344 | 
		345 |   reserved_concurrent_executions = 10
		346 | 
		347 |   dead_letter_config {
		348 |     target_arn = aws_sqs_queue.lambda_dlq.arn
		349 |   }
		350 | 
		351 |   vpc_config {
		352 |     subnet_ids         = data.aws_subnet_ids.default.ids
		353 |     security_group_ids = [aws_security_group.lambda_sg.id]
		354 |   }
		355 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_50] X-Ray tracing is enabled for Lambda" classname="/main.tf.aws_lambda_function.sqs_to_sns" file="/main.tf">
			<failure type="failure" message="X-Ray tracing is enabled for Lambda">
Resource: aws_lambda_function.sqs_to_sns
File: /main.tf: 373-393
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-4

		373 | resource &quot;aws_lambda_function&quot; &quot;sqs_to_sns&quot; {
		374 |   function_name = &quot;sqs_to_sns&quot;
		375 |   handler       = &quot;index.handler&quot;
		376 |   runtime       = &quot;nodejs18.x&quot;
		377 |   filename      = &quot;${path.module}/lambda_sqs_to_sns.zip&quot;
		378 |   source_code_hash = filebase64sha256(&quot;${path.module}/lambda_sqs_to_sns.zip&quot;)
		379 |   role          = aws_iam_role.lambda_role.arn
		380 | 
		381 |   environment {
		382 |     variables = {
		383 |       SNS_TOPIC_ARN = aws_sns_topic.iot_alert_topic.arn
		384 |     }
		385 |   }
		386 |   
		387 |   kms_key_arn = aws_kms_key.lambda_env_key.arn
		388 | 
		389 |   vpc_config {
		390 |     subnet_ids         = data.aws_subnet_ids.default.ids
		391 |     security_group_ids = [aws_security_group.lambda_sg.id]
		392 |   }
		393 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_116] Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)" classname="/main.tf.aws_lambda_function.sqs_to_sns" file="/main.tf">
			<failure type="failure" message="Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)">
Resource: aws_lambda_function.sqs_to_sns
File: /main.tf: 373-393
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		373 | resource &quot;aws_lambda_function&quot; &quot;sqs_to_sns&quot; {
		374 |   function_name = &quot;sqs_to_sns&quot;
		375 |   handler       = &quot;index.handler&quot;
		376 |   runtime       = &quot;nodejs18.x&quot;
		377 |   filename      = &quot;${path.module}/lambda_sqs_to_sns.zip&quot;
		378 |   source_code_hash = filebase64sha256(&quot;${path.module}/lambda_sqs_to_sns.zip&quot;)
		379 |   role          = aws_iam_role.lambda_role.arn
		380 | 
		381 |   environment {
		382 |     variables = {
		383 |       SNS_TOPIC_ARN = aws_sns_topic.iot_alert_topic.arn
		384 |     }
		385 |   }
		386 |   
		387 |   kms_key_arn = aws_kms_key.lambda_env_key.arn
		388 | 
		389 |   vpc_config {
		390 |     subnet_ids         = data.aws_subnet_ids.default.ids
		391 |     security_group_ids = [aws_security_group.lambda_sg.id]
		392 |   }
		393 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_272] Ensure AWS Lambda function is configured to validate code-signing" classname="/main.tf.aws_lambda_function.sqs_to_sns" file="/main.tf">
			<failure type="failure" message="Ensure AWS Lambda function is configured to validate code-signing">
Resource: aws_lambda_function.sqs_to_sns
File: /main.tf: 373-393
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-272

		373 | resource &quot;aws_lambda_function&quot; &quot;sqs_to_sns&quot; {
		374 |   function_name = &quot;sqs_to_sns&quot;
		375 |   handler       = &quot;index.handler&quot;
		376 |   runtime       = &quot;nodejs18.x&quot;
		377 |   filename      = &quot;${path.module}/lambda_sqs_to_sns.zip&quot;
		378 |   source_code_hash = filebase64sha256(&quot;${path.module}/lambda_sqs_to_sns.zip&quot;)
		379 |   role          = aws_iam_role.lambda_role.arn
		380 | 
		381 |   environment {
		382 |     variables = {
		383 |       SNS_TOPIC_ARN = aws_sns_topic.iot_alert_topic.arn
		384 |     }
		385 |   }
		386 |   
		387 |   kms_key_arn = aws_kms_key.lambda_env_key.arn
		388 | 
		389 |   vpc_config {
		390 |     subnet_ids         = data.aws_subnet_ids.default.ids
		391 |     security_group_ids = [aws_security_group.lambda_sg.id]
		392 |   }
		393 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_115] Ensure that AWS Lambda function is configured for function-level concurrent execution limit" classname="/main.tf.aws_lambda_function.sqs_to_sns" file="/main.tf">
			<failure type="failure" message="Ensure that AWS Lambda function is configured for function-level concurrent execution limit">
Resource: aws_lambda_function.sqs_to_sns
File: /main.tf: 373-393
Guideline: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		373 | resource &quot;aws_lambda_function&quot; &quot;sqs_to_sns&quot; {
		374 |   function_name = &quot;sqs_to_sns&quot;
		375 |   handler       = &quot;index.handler&quot;
		376 |   runtime       = &quot;nodejs18.x&quot;
		377 |   filename      = &quot;${path.module}/lambda_sqs_to_sns.zip&quot;
		378 |   source_code_hash = filebase64sha256(&quot;${path.module}/lambda_sqs_to_sns.zip&quot;)
		379 |   role          = aws_iam_role.lambda_role.arn
		380 | 
		381 |   environment {
		382 |     variables = {
		383 |       SNS_TOPIC_ARN = aws_sns_topic.iot_alert_topic.arn
		384 |     }
		385 |   }
		386 |   
		387 |   kms_key_arn = aws_kms_key.lambda_env_key.arn
		388 | 
		389 |   vpc_config {
		390 |     subnet_ids         = data.aws_subnet_ids.default.ids
		391 |     security_group_ids = [aws_security_group.lambda_sg.id]
		392 |   }
		393 | }
</failure>
		</testcase>
		<testcase name="[NONE][CKV_AWS_382] Ensure no security groups allow egress from 0.0.0.0:0 to port -1" classname="/main.tf.aws_security_group.lambda_sg" file="/main.tf">
			<skipped type="skipped" message="No comment provided"/>
		</testcase>
	</testsuite>
</testsuites>
